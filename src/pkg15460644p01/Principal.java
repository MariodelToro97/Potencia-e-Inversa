/*
* Este programa fue hecho por Mario Josue del Toro Morales
* con Número de Control 15460644
* Estudiante del sexto semestre de la carrera de Ingeniería en Sistemas Computacionales
* del Instituto Tecnológico de Colima
* Materia de Lenguajes y Autómatas I
******Descripción************
*Programa que obtiene la inversa y potencia de una cadena dada.
*/
package pkg15460644p01;

import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;

/**
 *
 * @author Mario Josue del Toro Morales
 */
public class Principal extends javax.swing.JFrame {
    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        potencia = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        cadena = new javax.swing.JTextField();
        elevacion = new javax.swing.JButton();
        inversa = new javax.swing.JButton();
        resultado = new javax.swing.JLabel();
        Answer = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(91, 239, 145));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("15460644");
        jLabel6.setToolTipText("Número de Control");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("02 Práctica 1: Programa para cadena, potencia e inversa de cadenas");
        jLabel7.setToolTipText("Nombre de la práctica");

        jButton4.setBackground(new java.awt.Color(255, 255, 102));
        jButton4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton4.setText("Limpiar");
        jButton4.setToolTipText("Borrará lo que se escribió en los cuadros de texto");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Potencia:");

        potencia.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        potencia.setToolTipText("¿A qué potencia la deseas elevar?");
        potencia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                potenciaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                potenciaKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Inserción de cadena:");

        cadena.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        cadena.setToolTipText("Ingresa Cadena");
        cadena.setName("cadena"); // NOI18N
        cadena.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cadenaKeyReleased(evt);
            }
        });

        elevacion.setBackground(new java.awt.Color(102, 255, 204));
        elevacion.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        elevacion.setText("Potencia");
        elevacion.setToolTipText("Saca la Potencia de la cadena");
        elevacion.setEnabled(false);
        elevacion.setName("potencia"); // NOI18N
        elevacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elevacionActionPerformed(evt);
            }
        });

        inversa.setBackground(new java.awt.Color(102, 255, 102));
        inversa.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        inversa.setText("Inversa");
        inversa.setToolTipText("Saca la Inversa de la cadena");
        inversa.setEnabled(false);
        inversa.setName("inversa"); // NOI18N
        inversa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inversaActionPerformed(evt);
            }
        });

        resultado.setFont(new java.awt.Font("Microsoft Sans Serif", 3, 14)); // NOI18N
        resultado.setForeground(new java.awt.Color(255, 0, 0));
        resultado.setText("Resultado:");
        resultado.setName("resultado"); // NOI18N

        Answer.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        Answer.setToolTipText("Resultado obtenido");
        Answer.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Answer.setName(""); // NOI18N

        jButton3.setBackground(new java.awt.Color(255, 102, 102));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton3.setText("Salir");
        jButton3.setToolTipText("Termina la aplicación");
        jButton3.setName("salir"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 3, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(245, 91, 91));
        jLabel4.setText("Lenguajes y Autómatas I");
        jLabel4.setToolTipText("Nombre de la materia");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Mario Josué Del Toro Morales ");
        jLabel5.setToolTipText("Autor");

        jLabel9.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel9.setText("Este programa tiene como función el de sacar la potencia e inversa de una cadena");
        jLabel9.setToolTipText("Descripción de programa");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 204));
        jLabel2.setText("Autor:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 204));
        jLabel3.setText("Número de Control:");

        jButton1.setText("¿Qué es Potencia?");
        jButton1.setToolTipText("Información sobre la función de Potencia");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("¿Qué es Inversa?");
        jButton2.setToolTipText("Información sobre la función de Inversa");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        jLabel10.setText("Instituto Tecnológico de Colima");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(207, 30, 67));
        jLabel11.setText("Ingeniería en Sistemas Computacionales");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Sexto");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 204));
        jLabel13.setText("Semestre:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel12)))
                .addGap(132, 132, 132)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(41, 41, 41))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(elevacion, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 36, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cadena, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(potencia, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(inversa, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(81, 81, 81)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(43, 43, 43))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(77, 77, 77))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addGap(122, 122, 122))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(resultado, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Answer))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(jLabel11)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cadena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(potencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(elevacion, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inversa, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resultado)
                    .addComponent(Answer))
                .addGap(20, 20, 20)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel12))
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // Limpia lo que halla en los textbox
        cadena.setText("");
        potencia.setText("");
        Answer.setText("");
        //Deshabilitar botones que proceden a hacer los algoritmos
        elevacion.setEnabled(false);
        inversa.setEnabled(false);
        //Ocultar componentes para que este como al inicio
        Answer.setVisible(false);
        resultado.setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Cierra la aplicación
        JOptionPane.showMessageDialog(null, "Gracias por usar este programa\n Lo esperamos de vuelta pronto\n Versión 1.5.32\n\n Creado por: Mario Josue del Toro Morales\nEstudiante del Instituto Tecnológico de Colima\n Carrera de Ingeniería en Sistemas Coputacionales\n No. Control: 15460647\n Sexto Semestre", "AGRADECIMIENTO", JOptionPane.INFORMATION_MESSAGE);
        System.exit(0);
    }//GEN-LAST:event_jButton3ActionPerformed
    
    //Método para validar que solo se ingresen números en el campo de Potencia
    private void potenciaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_potenciaKeyTyped
        // Método que se activa al momento de pulsar una tecla dentro de este campo        
        if (!Character.isDigit(evt.getKeyChar())) { //Revisión si no es digito, se elimina la tecla pulsada
            evt.consume(); //acción que elimina la tecla pulsada
        }
    }//GEN-LAST:event_potenciaKeyTyped

    //Método recursivo para la obtención de la potencia de una cadena.
    public static String Potencia(String cadena, int potencia){
        if (potencia == 1) { //Cuando el método llega a 1
            return cadena; //Regresa la cadena tal cuál
        } else {
            potencia--; //Se disminuye la potencia
            return cadena + Potencia (cadena, potencia); //Concatena la cadena original con lo que sale de la recursividad.
        }
    }
    private void elevacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elevacionActionPerformed
        // Método que se deesencadena tras pulsar el boton de Potencia de la interfaz principal
        if (Integer.parseInt(potencia.getText()) == 0) { //Si se coloca una potencia de 0, colocará la cadena vacía
            Answer.setText("λ");
        } else { //Si no se coloca 0, mandará a llamar al método recursivo
            Answer.setText(Potencia(cadena.getText(), Integer.parseInt(potencia.getText())));//Asignación del texto de la etiqueta del resultado del método recusrsivo
        }
        //Hacer visibles componentes para que se pueda observar el resultado
        Answer.setVisible(true);
        resultado.setVisible(true);
    }//GEN-LAST:event_elevacionActionPerformed

    private void cadenaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cadenaKeyReleased
        // Método que habilita el botón de Inversa
        if (cadena.getText().length() != 0) {
            elevacion.setEnabled(potencia.getText().length() != 0); //Habilita el botón de potencia
            
            if (cadena.getText().length() != 0) {
                inversa.setEnabled(true); //Habilita el botón de inversa
            } else {
                inversa.setEnabled(false); // Deshabilita el botón de inversa
            }            
        } else {
            elevacion.setEnabled(false);
            inversa.setEnabled(false);
        }     
    }//GEN-LAST:event_cadenaKeyReleased

    private void potenciaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_potenciaKeyReleased
        // Método que habilita el botón de Potencia
        
        if (cadena.getText().length() != 0) {
            elevacion.setEnabled(potencia.getText().length() != 0); //Habilita el botón de potencia
            
            if (cadena.getText().length() != 0) {
                inversa.setEnabled(true); //Habilita el botón de inversa
            } else {
                inversa.setEnabled(false); // Deshabilita el botón de inversa
            }            
        }else {
            elevacion.setEnabled(false);
            inversa.setEnabled(false);
        }    
    }//GEN-LAST:event_potenciaKeyReleased

    //Método recursivo para sacar la inversa de una cadena
    public static String Inversa(String cadena, int longitud){        
        if (longitud == 1) { //Si la longitud llega al inicio de la cadena, se retorna el primer caracter de la cadena
            return Character.toString(cadena.charAt(0)); //retorno del primer caracter de la cadena
        } else {
            longitud--; //Resta de la longitud que se tiene de la cadena original
            return Character.toString(cadena.charAt(longitud)) + Inversa(cadena, longitud); //fijación de la letra de la cadena y llamado de l método recursivo
        }
    }
    private void inversaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inversaActionPerformed
        // Método para sacar la inversa de una cadena
        Answer.setText(Inversa(cadena.getText(), cadena.getText().length())); //Se asigna en la etiqueta correspondiente el resultado del mpetodo recursivo
        //Hacer visibles componentes para que se pueda observar el resultado
        Answer.setVisible(true);
        resultado.setVisible(true);
    }//GEN-LAST:event_inversaActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // Método que se ejecuta al cargar la pantalla
        Answer.setVisible(false);
        resultado.setVisible(false);
    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Despliega información sobre la función de Potencia
        JOptionPane.showMessageDialog(null, "Dentro de la bibliografía de Dean Kelley menciona\nde forma muy general que existen dos posibilidades dentro\nde esta operación, el primero dice que si la potencia a la\ncual se desea elevar un número es cero, entonces el\nresultado de dicha operación sería el conjunto vacío, sin\nembargo, en el caso que se busque elevar a una potencia\nque sea distinto y mayor a 0, entonces tendremos la\nconcatenación de la cadena en sí con la cadena en una\ncantidad de n -1 veces", "Información de Potencia", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //Despliega información sobre la función de Inversa
        JOptionPane.showMessageDialog(null, "Dentro de la bibliografía de Dean Kelley menciona que\n“la inversa o transpuesta de una palabra w es\nla imagen refleja de w. Por ejemplo, si w = “able”\nentonces su inversa es “elba”. Para denotar\nla inversa de w se usa w' ”, una de las formas\nde hacerlo dentro de la programación es con ayuda\nde la recursividad", "Información de Inversa", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Answer;
    private javax.swing.JTextField cadena;
    private javax.swing.JButton elevacion;
    private javax.swing.JButton inversa;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField potencia;
    private javax.swing.JLabel resultado;
    // End of variables declaration//GEN-END:variables
}
